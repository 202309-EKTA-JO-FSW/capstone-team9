"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/debounce";
exports.ids = ["vendor-chunks/debounce"];
exports.modules = {

/***/ "(ssr)/./node_modules/debounce/index.js":
/*!****************************************!*\
  !*** ./node_modules/debounce/index.js ***!
  \****************************************/
/***/ ((module) => {

eval("\nfunction debounce(function_, wait = 100, options = {}) {\n    if (typeof function_ !== \"function\") {\n        throw new TypeError(`Expected the first parameter to be a function, got \\`${typeof function_}\\`.`);\n    }\n    if (wait < 0) {\n        throw new RangeError(\"`wait` must not be negative.\");\n    }\n    // TODO: Deprecate the boolean parameter at some point.\n    const { immediate } = typeof options === \"boolean\" ? {\n        immediate: options\n    } : options;\n    let storedContext;\n    let storedArguments;\n    let timeoutId;\n    let timestamp;\n    let result;\n    function later() {\n        const last = Date.now() - timestamp;\n        if (last < wait && last >= 0) {\n            timeoutId = setTimeout(later, wait - last);\n        } else {\n            timeoutId = undefined;\n            if (!immediate) {\n                const callContext = storedContext;\n                const callArguments = storedArguments;\n                storedContext = undefined;\n                storedArguments = undefined;\n                result = function_.apply(callContext, callArguments);\n            }\n        }\n    }\n    const debounced = function(...arguments_) {\n        if (storedContext && this !== storedContext) {\n            throw new Error(\"Debounced method called with different contexts.\");\n        }\n        storedContext = this; // eslint-disable-line unicorn/no-this-assignment\n        storedArguments = arguments_;\n        timestamp = Date.now();\n        const callNow = immediate && !timeoutId;\n        if (!timeoutId) {\n            timeoutId = setTimeout(later, wait);\n        }\n        if (callNow) {\n            const callContext = storedContext;\n            const callArguments = storedArguments;\n            storedContext = undefined;\n            storedArguments = undefined;\n            result = function_.apply(callContext, callArguments);\n        }\n        return result;\n    };\n    debounced.clear = ()=>{\n        if (!timeoutId) {\n            return;\n        }\n        clearTimeout(timeoutId);\n        timeoutId = undefined;\n    };\n    debounced.flush = ()=>{\n        if (!timeoutId) {\n            return;\n        }\n        const callContext = storedContext;\n        const callArguments = storedArguments;\n        storedContext = undefined;\n        storedArguments = undefined;\n        result = function_.apply(callContext, callArguments);\n        clearTimeout(timeoutId);\n        timeoutId = undefined;\n    };\n    return debounced;\n}\n// Adds compatibility for ES modules\nmodule.exports.debounce = debounce;\nmodule.exports = debounce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZGVib3VuY2UvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLFNBQVNDLFNBQVMsRUFBRUMsT0FBTyxHQUFHLEVBQUVDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BELElBQUksT0FBT0YsY0FBYyxZQUFZO1FBQ3BDLE1BQU0sSUFBSUcsVUFBVSxDQUFDLHFEQUFxRCxFQUFFLE9BQU9ILFVBQVUsR0FBRyxDQUFDO0lBQ2xHO0lBRUEsSUFBSUMsT0FBTyxHQUFHO1FBQ2IsTUFBTSxJQUFJRyxXQUFXO0lBQ3RCO0lBRUEsdURBQXVEO0lBQ3ZELE1BQU0sRUFBQ0MsU0FBUyxFQUFDLEdBQUcsT0FBT0gsWUFBWSxZQUFZO1FBQUNHLFdBQVdIO0lBQU8sSUFBSUE7SUFFMUUsSUFBSUk7SUFDSixJQUFJQztJQUNKLElBQUlDO0lBQ0osSUFBSUM7SUFDSixJQUFJQztJQUVKLFNBQVNDO1FBQ1IsTUFBTUMsT0FBT0MsS0FBS0MsR0FBRyxLQUFLTDtRQUUxQixJQUFJRyxPQUFPWCxRQUFRVyxRQUFRLEdBQUc7WUFDN0JKLFlBQVlPLFdBQVdKLE9BQU9WLE9BQU9XO1FBQ3RDLE9BQU87WUFDTkosWUFBWVE7WUFFWixJQUFJLENBQUNYLFdBQVc7Z0JBQ2YsTUFBTVksY0FBY1g7Z0JBQ3BCLE1BQU1ZLGdCQUFnQlg7Z0JBQ3RCRCxnQkFBZ0JVO2dCQUNoQlQsa0JBQWtCUztnQkFDbEJOLFNBQVNWLFVBQVVtQixLQUFLLENBQUNGLGFBQWFDO1lBQ3ZDO1FBQ0Q7SUFDRDtJQUVBLE1BQU1FLFlBQVksU0FBVSxHQUFHQyxVQUFVO1FBQ3hDLElBQUlmLGlCQUFpQixJQUFJLEtBQUtBLGVBQWU7WUFDNUMsTUFBTSxJQUFJZ0IsTUFBTTtRQUNqQjtRQUVBaEIsZ0JBQWdCLElBQUksRUFBRSxpREFBaUQ7UUFDdkVDLGtCQUFrQmM7UUFDbEJaLFlBQVlJLEtBQUtDLEdBQUc7UUFFcEIsTUFBTVMsVUFBVWxCLGFBQWEsQ0FBQ0c7UUFFOUIsSUFBSSxDQUFDQSxXQUFXO1lBQ2ZBLFlBQVlPLFdBQVdKLE9BQU9WO1FBQy9CO1FBRUEsSUFBSXNCLFNBQVM7WUFDWixNQUFNTixjQUFjWDtZQUNwQixNQUFNWSxnQkFBZ0JYO1lBQ3RCRCxnQkFBZ0JVO1lBQ2hCVCxrQkFBa0JTO1lBQ2xCTixTQUFTVixVQUFVbUIsS0FBSyxDQUFDRixhQUFhQztRQUN2QztRQUVBLE9BQU9SO0lBQ1I7SUFFQVUsVUFBVUksS0FBSyxHQUFHO1FBQ2pCLElBQUksQ0FBQ2hCLFdBQVc7WUFDZjtRQUNEO1FBRUFpQixhQUFhakI7UUFDYkEsWUFBWVE7SUFDYjtJQUVBSSxVQUFVTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxDQUFDbEIsV0FBVztZQUNmO1FBQ0Q7UUFFQSxNQUFNUyxjQUFjWDtRQUNwQixNQUFNWSxnQkFBZ0JYO1FBQ3RCRCxnQkFBZ0JVO1FBQ2hCVCxrQkFBa0JTO1FBQ2xCTixTQUFTVixVQUFVbUIsS0FBSyxDQUFDRixhQUFhQztRQUV0Q08sYUFBYWpCO1FBQ2JBLFlBQVlRO0lBQ2I7SUFFQSxPQUFPSTtBQUNSO0FBRUEsb0NBQW9DO0FBQ3BDTyx1QkFBdUIsR0FBRzVCO0FBRTFCNEIsT0FBT0MsT0FBTyxHQUFHN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZGVib3VuY2UvaW5kZXguanM/MDFhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBkZWJvdW5jZShmdW5jdGlvbl8sIHdhaXQgPSAxMDAsIG9wdGlvbnMgPSB7fSkge1xuXHRpZiAodHlwZW9mIGZ1bmN0aW9uXyAhPT0gJ2Z1bmN0aW9uJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIHRoZSBmaXJzdCBwYXJhbWV0ZXIgdG8gYmUgYSBmdW5jdGlvbiwgZ290IFxcYCR7dHlwZW9mIGZ1bmN0aW9uX31cXGAuYCk7XG5cdH1cblxuXHRpZiAod2FpdCA8IDApIHtcblx0XHR0aHJvdyBuZXcgUmFuZ2VFcnJvcignYHdhaXRgIG11c3Qgbm90IGJlIG5lZ2F0aXZlLicpO1xuXHR9XG5cblx0Ly8gVE9ETzogRGVwcmVjYXRlIHRoZSBib29sZWFuIHBhcmFtZXRlciBhdCBzb21lIHBvaW50LlxuXHRjb25zdCB7aW1tZWRpYXRlfSA9IHR5cGVvZiBvcHRpb25zID09PSAnYm9vbGVhbicgPyB7aW1tZWRpYXRlOiBvcHRpb25zfSA6IG9wdGlvbnM7XG5cblx0bGV0IHN0b3JlZENvbnRleHQ7XG5cdGxldCBzdG9yZWRBcmd1bWVudHM7XG5cdGxldCB0aW1lb3V0SWQ7XG5cdGxldCB0aW1lc3RhbXA7XG5cdGxldCByZXN1bHQ7XG5cblx0ZnVuY3Rpb24gbGF0ZXIoKSB7XG5cdFx0Y29uc3QgbGFzdCA9IERhdGUubm93KCkgLSB0aW1lc3RhbXA7XG5cblx0XHRpZiAobGFzdCA8IHdhaXQgJiYgbGFzdCA+PSAwKSB7XG5cdFx0XHR0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGxhdGVyLCB3YWl0IC0gbGFzdCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRpbWVvdXRJZCA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCFpbW1lZGlhdGUpIHtcblx0XHRcdFx0Y29uc3QgY2FsbENvbnRleHQgPSBzdG9yZWRDb250ZXh0O1xuXHRcdFx0XHRjb25zdCBjYWxsQXJndW1lbnRzID0gc3RvcmVkQXJndW1lbnRzO1xuXHRcdFx0XHRzdG9yZWRDb250ZXh0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRzdG9yZWRBcmd1bWVudHMgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdHJlc3VsdCA9IGZ1bmN0aW9uXy5hcHBseShjYWxsQ29udGV4dCwgY2FsbEFyZ3VtZW50cyk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Y29uc3QgZGVib3VuY2VkID0gZnVuY3Rpb24gKC4uLmFyZ3VtZW50c18pIHtcblx0XHRpZiAoc3RvcmVkQ29udGV4dCAmJiB0aGlzICE9PSBzdG9yZWRDb250ZXh0KSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0RlYm91bmNlZCBtZXRob2QgY2FsbGVkIHdpdGggZGlmZmVyZW50IGNvbnRleHRzLicpO1xuXHRcdH1cblxuXHRcdHN0b3JlZENvbnRleHQgPSB0aGlzOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHVuaWNvcm4vbm8tdGhpcy1hc3NpZ25tZW50XG5cdFx0c3RvcmVkQXJndW1lbnRzID0gYXJndW1lbnRzXztcblx0XHR0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuXG5cdFx0Y29uc3QgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dElkO1xuXG5cdFx0aWYgKCF0aW1lb3V0SWQpIHtcblx0XHRcdHRpbWVvdXRJZCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuXHRcdH1cblxuXHRcdGlmIChjYWxsTm93KSB7XG5cdFx0XHRjb25zdCBjYWxsQ29udGV4dCA9IHN0b3JlZENvbnRleHQ7XG5cdFx0XHRjb25zdCBjYWxsQXJndW1lbnRzID0gc3RvcmVkQXJndW1lbnRzO1xuXHRcdFx0c3RvcmVkQ29udGV4dCA9IHVuZGVmaW5lZDtcblx0XHRcdHN0b3JlZEFyZ3VtZW50cyA9IHVuZGVmaW5lZDtcblx0XHRcdHJlc3VsdCA9IGZ1bmN0aW9uXy5hcHBseShjYWxsQ29udGV4dCwgY2FsbEFyZ3VtZW50cyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fTtcblxuXHRkZWJvdW5jZWQuY2xlYXIgPSAoKSA9PiB7XG5cdFx0aWYgKCF0aW1lb3V0SWQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjbGVhclRpbWVvdXQodGltZW91dElkKTtcblx0XHR0aW1lb3V0SWQgPSB1bmRlZmluZWQ7XG5cdH07XG5cblx0ZGVib3VuY2VkLmZsdXNoID0gKCkgPT4ge1xuXHRcdGlmICghdGltZW91dElkKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3QgY2FsbENvbnRleHQgPSBzdG9yZWRDb250ZXh0O1xuXHRcdGNvbnN0IGNhbGxBcmd1bWVudHMgPSBzdG9yZWRBcmd1bWVudHM7XG5cdFx0c3RvcmVkQ29udGV4dCA9IHVuZGVmaW5lZDtcblx0XHRzdG9yZWRBcmd1bWVudHMgPSB1bmRlZmluZWQ7XG5cdFx0cmVzdWx0ID0gZnVuY3Rpb25fLmFwcGx5KGNhbGxDb250ZXh0LCBjYWxsQXJndW1lbnRzKTtcblxuXHRcdGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuXHRcdHRpbWVvdXRJZCA9IHVuZGVmaW5lZDtcblx0fTtcblxuXHRyZXR1cm4gZGVib3VuY2VkO1xufVxuXG4vLyBBZGRzIGNvbXBhdGliaWxpdHkgZm9yIEVTIG1vZHVsZXNcbm1vZHVsZS5leHBvcnRzLmRlYm91bmNlID0gZGVib3VuY2U7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVib3VuY2U7XG4iXSwibmFtZXMiOlsiZGVib3VuY2UiLCJmdW5jdGlvbl8iLCJ3YWl0Iiwib3B0aW9ucyIsIlR5cGVFcnJvciIsIlJhbmdlRXJyb3IiLCJpbW1lZGlhdGUiLCJzdG9yZWRDb250ZXh0Iiwic3RvcmVkQXJndW1lbnRzIiwidGltZW91dElkIiwidGltZXN0YW1wIiwicmVzdWx0IiwibGF0ZXIiLCJsYXN0IiwiRGF0ZSIsIm5vdyIsInNldFRpbWVvdXQiLCJ1bmRlZmluZWQiLCJjYWxsQ29udGV4dCIsImNhbGxBcmd1bWVudHMiLCJhcHBseSIsImRlYm91bmNlZCIsImFyZ3VtZW50c18iLCJFcnJvciIsImNhbGxOb3ciLCJjbGVhciIsImNsZWFyVGltZW91dCIsImZsdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/debounce/index.js\n");

/***/ })

};
;